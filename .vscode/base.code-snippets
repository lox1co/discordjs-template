{
  "create a basic command": {
    "scope": "typescript",
    "prefix": "basecommand",
    "body": [
      "import type Client from \"../../client\";",
      "import { Command } from \"../../client\";",
      "import { type ChatInputCommandInteraction } from \"../../client/types\";",
      "import { type InteractionResponse } from \"discord.js\";",
      "",
      "export default class ${1/^(.)(.*)$/${1:/upcase}${2}/}Command extends Command {",
      "  constructor(client: Client) {",
      "    super(client, (data) => data.setName(\"$1\").setDescription(\"${1/^(.)(.*)$/${1:/upcase}${2}/} command\"));",
      "  }",
      "",
      "  run(interaction: ChatInputCommandInteraction): Promise<InteractionResponse<boolean>> {",
      "    $0",
      "  }",
      "}",
      ""
    ]
  },

  "create a basic event": {
    "scope": "typescript",
    "prefix": "baseevent",
    "body": [
      "import { Events } from \"discord.js\";",
      "import type Client from \"../../client\";",
      "import { Event } from \"../../client\";",
      "",
      "export default class ${1/^(.)(.*)$/${1:/upcase}${2}/}Event extends Event {",
      "  constructor(client: Client) {",
      "    super(client, {",
      "      name: Events.$2",
      "    });",
      "  }",
      "",
      "  run(): void {",
      "    $0",
      "  }",
      "}",
      ""
    ]
  }
}
